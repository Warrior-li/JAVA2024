Note that this is an individual assignment, not a group activity ! Automated checkers will be used to flag partly (or fully) duplicate submissions from students in this year's cohort. If markers feel that collusion between students has taken place, the incident will be referred to an academic malpractice panel. The outcome of this panel may be a mark of zero for assignment or even the entire unit (if it is a repeat offence).

For consistency and compatibly with all test cases, it is essential that you adhere to the gameplay commands detailed in this workbook.
You should also ensure that you do not change the name of your main class - it must be called `GameServer`.
If you change the name of the class (or the `handleCommand` method) the marking script will not be able to test your code !
It is **ESSENTIAL** that you check your code still passes the original test script provided as part of the maven project.
If your code does not pass these basic tests, then it is likely your code will not pass any of the final marking tests.

Make sure your code does not contain anything specific to your computer (e.g. absolute file paths, operating system specific code etc).
Before submitting your code, we advise you to test your project on a computer _other than the one it was developed on_ (e.g. a lab machine).
Clear out all temporary files and then ensure the code compiles and runs correctly using Maven. We will apply a penalty mark if we cannot run your code
"out of the box" - we can't spend time fixing everyones projects before we mark them !

Note that the "quality" of your code will be taken into account when assessing your work.
The code quality metrics outlined earlier in this unit will be used to derive your final mark.
It is important therefore that you adhere to the structure and style guidelines outlined in the "code quality" workbook.
It is also essential that you take heed of the quality feedback you have received for previous exercises,
since this will help you improve your work - not just for this exercise, but in the long term.

Remember that your code MUST NOT use any of the banned "illegal" language constructs (namely: Lambdas, Arrays, ArrayLists, Ternary operators, Unqualified method calls, String concatenation). If you do use any of these illegal constructs in your submission, your assignment will receive a mark of zero ! Remember to use the `strange` tool to check that your source code does not make use of any illegal constructs.

Finally, remember that we will use automated analysis tools to determine "derived" code (material "found" online or generated by AI). You will only receive credit for code that YOU yourself have written.